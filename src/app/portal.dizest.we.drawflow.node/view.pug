.dizest-app-node([ngClass]="actionState()")
    .card-header.drawflow-handler([ngClass]="isActive() ? '' : 'inactive'")
        .avatar-area.avatar-area-sm.mr-2((click)="flow.toggle()")
            .avatar-container
                span.avatar([ngStyle]="{'background-image': app.logo() }")
                span.avatar-icon
                    i.fa-solid.fa-toggle-off(*ngIf="!isActive()")
                    i.fa-solid.fa-toggle-on(*ngIf="isActive()")

        h2.card-title(style='line-height: 1;') 
            span {{flow.title()}}
            br
            small.version 1.0.0
                
        .ml-auto
        button.btn.btn-sm.btn-white.d-desktop((click)='delete()')
            i.fa-solid.fa-xmark

    .card-body.actions.d-flex.p-0
        span.finish-indicator.status-indicator(*ngIf="['idle'].includes(status()) && index() > 0") {{index() % 1000000}}
        span.pending-indicator.status-indicator.status-yellow.status-indicator-animated(*ngIf="['pending'].includes(status())")
            span.status-indicator-circle
                span.status-indicator-circle
                span.status-indicator-circle
                span.status-indicator-circle
        .action-btn.d-desktop((click)='code()')
            i.fa-solid.fa-code
        .action-btn.d-desktop((click)='uimode()')
            i.fa-solid.fa-display
        .action-btn.action-btn-play((click)='run()', *ngIf="['idle', 'error'].includes(status())")
            i.fa-solid.fa-play
        .action-btn.action-btn-stop((click)='stop()', *ngIf="!['idle', 'error'].includes(status())")
            i.fa-solid.fa-stop
    
    .progress.progress-sm(*ngIf="['running'].includes(status())")
        .progress-bar.bg-blue.progress-bar-indeterminate

    .card-body.value-container.p-0
        .value-header
            span Variables
            .btn.btn-sm.btn-secondary.ml-1(*ngIf="count('variable') > 0", (click)="addVariable()")
                i.fa-solid.fa-plus

        div([sortablejs]="inputs()", [sortablejsOptions]="{ animation: 150, handle: '.value-title', onUpdate: sorted, scope: scope }")
            div(*ngFor="let item of inputs()")
                .value-wrapper([ngClass]="item.type == 'variable' ? 'show' : 'hidden'", [class.hover]="item.conf")
                    .value-title
                        input([(ngModel)]="item.name", (change)='sorted()')
                    
                    .value-action
                        .btn.btn-sm.btn-secondary((click)="variableConfigure(item)")
                            i.fa-solid.fa-cog(*ngIf="!item.conf")
                            i.fa-solid.fa-floppy-disk(*ngIf="item.conf")

                    .value-data(*ngIf="!['list', 'textarea', 'file', 'folder'].includes(item.inputtype)")
                        input.form-control.form-control-sm.text-center([type]='item.inputtype', [placeholder]='item.description', [(ngModel)]="data()[item.name]")
                    
                    .value-data(*ngIf="['textarea'].includes(item.inputtype)")
                        textarea.form-control.form-control-sm([placeholder]='item.description', rows=5, [(ngModel)]="data()[item.name]")
                    
                    .value-data(*ngIf="['file', 'folder'].includes(item.inputtype)", style="display: flex;")
                        input.form-control.form-control-sm.text-left(type='text', [placeholder]='item.description', [(ngModel)]="data()[item.name]")
                        span.badge.badge-sm.bg-secondary((click)="selectFile(item)", style='display: flex; align-item: center; cursor: pointer;')
                            i.fa-solid.fa-upload

                    .value-data(*ngIf="['list'].includes(item.inputtype)")
                        select.form-select.form-select-sm.text-center([(ngModel)]="data()[item.name]")
                            ng-container(*ngFor="let val of options(item.description);")
                                option([value]='val.value') {{val.key}}

                .value-configure(*ngIf="item.conf")
                    .row
                        .col-auto.option-title Type
                        .col
                            select.form-select.form-select-sm.text-center([(ngModel)]="item.inputtype", (change)='variableConfigureChanged()')
                                option(value='text') Text
                                option(value='textarea') Textarea
                                option(value='number') Number
                                option(value='password') Password
                                option(value='date') Date
                                option(value='time') Time
                                option(value='list') List
                                option(value='file') File
                        .col-auto
                            .btn.btn-sm.btn-red((click)="removeInput(item)")
                                i.fa-solid.fa-xmark
                    .row(*ngIf="item.inputtype != 'list'")
                        .col-auto.option-title Desc
                        .col
                            input.form-control.form-control-sm.text-left(type='text', [(ngModel)]="item.description")
                    .row(*ngIf="item.inputtype == 'list' && item.cache")
                        .col-auto.option-title List
                        .col
                            table
                                tr.text-center
                                    th Display Text
                                    th Value
                                    th
                                tr(*ngFor="let val of item.cache")
                                    td
                                        input.form-control.form-control-sm.text-left([(ngModel)]="val.key", placeholder="title")
                                    td
                                        input.form-control.form-control-sm.text-left([(ngModel)]="val.value", placeholder="value")
                                    td
                                        .btn.btn-sm.btn-red((click)="item.cache.remove(val); variableConfigureChanged()")
                                            i.fa-solid.fa-xmark
                                tr
                                    td.text-center(colspan=3)
                                        .btn.btn-sm.btn-secondary.btn-block((click)="item.cache.push({key: '', value: ''}); variableConfigureChanged()")
                                            i.fa-solid.fa-plus

        .value-add.text-center.pt-1.pb-1(*ngIf="count('variable') == 0", (click)="addVariable()")
            i.fa-solid.fa-plus

    .variable-header
        .input-header
            span Input
            .btn.btn-sm.btn-secondary.ml-1(*ngIf="count('input') > 0", (click)="addInput()")
                i.fa-solid.fa-plus
                
        .output-header
            span Output
            .btn.btn-sm.btn-secondary.ml-1(*ngIf="outputs().length > 0", (click)="addOutput()")
                i.fa-solid.fa-plus

    .variable-container
        .input-container([sortablejs]="inputs()", [sortablejsOptions]="{ animation: 150, handle: '.value-title', onUpdate: sorted, scope: scope }")
            ng-container(*ngFor="let item of inputs()")
                div([ngClass]="item.type == 'output' ? 'show' : 'hidden'")
                    .inputs
                        .input([ngClass]="'input-' + item.name")

                    .value-wrapper([ngClass]="item.type == 'output' ? 'show' : 'hidden'")
                        .value-title.input-text
                            input([(ngModel)]="item.name", (change)='sorted()')
                        .value-action((click)="removeInput(item)")
                            .btn.btn-sm.btn-secondary
                                i.fa-solid.fa-xmark

            .value-add.text-center.pt-1.pb-1(*ngIf="count('input') == 0", (click)="addInput()")
                i.fa-solid.fa-plus

        .output-container([sortablejs]="outputs()", [sortablejsOptions]="{ animation: 150, handle: '.value-title', onUpdate: sorted, scope: scope }")
            .show(*ngFor="let item of outputs()")
                .outputs
                    .output([ngClass]="'output-' + item.name")

                .value-wrapper.show
                    .value-title.output-text
                        input([(ngModel)]="item.name", (change)='sorted()')
                    .value-action.mr-2((click)="removeOutput(item)")
                        .btn.btn-sm.btn-secondary
                            i.fa-solid.fa-xmark

            .value-add.text-center.pt-1.pb-1(*ngIf="outputs().length == 0", (click)="addOutput()")
                i.fa-solid.fa-plus

    pre.debug-message(*ngIf="log()", [innerHtml]="log()", '#debug'='')