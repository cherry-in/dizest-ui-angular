.side-container((drop)="drop($event)", (dragover)="dragover($event)", (dragleave)="dragleave($event)", (dragenter)="dragenter($event)", [class.donothover]="donothover")
    .side-heading.area-round([ngStyle]="rootStyle")
        h3.nowrap.m-0(style="max-width: 220px; overflow: hidden; text-overflow: ellipsis;")
            span Drive
        .ml-auto
        .btn.btn-white.btn-sm.me-1((click)="toggleHiddenFile();")
            i.fa-solid.fa-eye.text-blue(*ngIf="showHiddenFile")
            i.fa-solid.fa-eye-slash.text-blue(*ngIf="!showHiddenFile")
        .btn.btn-white.btn-sm.me-1((click)="refresh();")
            i.fa-solid.fa-refresh.text-blue
        .btn.btn-white.btn-sm.me-1((click)="create(null, 'folder');")
            i.fa-solid.fa-folder-plus.text-blue
        .btn.btn-white.btn-sm.me-1((click)="file();")
            i.fa-solid.fa-upload.text-blue

    .side-body.area-round
        mat-tree.file-tree([dataSource]="dataSource", [treeControl]="treeControl")
            mat-tree-node(
                *matTreeNodeDef="let node", 
                matTreeNodePadding="", 
                matTreeNodePaddingIndent="16px", 
                (click)="open(node)", 
                [ngClass]="active(node) ? 'active' : ''")

                ng-container(*ngIf="isShowHiddenFile(node)")
                    i.tree-icon.fa-regular.fa-file-lines.mr-2((click)="node.editable = !node.editable; $event.stopPropagation(); service.render()")
                    .file-title(style="flex: auto; overflow: hidden;") 
                        span(*ngIf="!node.editable") {{node.name}}
                        input.form-control.form-control-sm([(ngModel)]="node.rename", placeholder="{{node.type.split('.')[1]}} name", (keyup.enter)="move(node);", *ngIf="node.editable", (click)="$event.stopPropagation();")
                    i.icon-action.fa-solid.fa-download((click)="download(node); $event.stopPropagation();")
                    i.icon-action.fa-solid.fa-trash-can((click)="delete(node); $event.stopPropagation();")

            mat-tree-node(
                *matTreeNodeDef="let node; when: isNew", 
                matTreeNodePadding="", 
                matTreeNodePaddingIndent="16px")
                i.tree-icon.fa-regular.fa-file.mr-2(*ngIf="node.type == 'new.file'")
                i.tree-icon.fa-regular.fa-folder.mr-2(*ngIf="node.type == 'new.folder'")
                .file-title(style="flex: auto; overflow: hidden;") 
                    input.form-control.form-control-sm([(ngModel)]="node.name", placeholder="{{node.type.split('.')[1]}} name", (keyup.enter)="create(node);")
                i.icon-action-always.fa-solid.fa-xmark((click)="delete(node); $event.stopPropagation();")
                i.icon-action-always.fa-solid.fa-check((click)="create(node); $event.stopPropagation();")

            mat-tree-node(
                *matTreeNodeDef="let node; when: isFolder", 
                matTreeNodePadding="", 
                matTreeNodeToggle="", 
                matTreeNodePaddingIndent="16px", 
                [ngClass]="active(node) ? 'active' : ''", 
                (drop)="drop($event, node)", 
                (dragover)="dragover($event, node)", 
                (dragleave)="dragleave($event, node)", 
                (dragenter)="dragenter($event, node)", 
                (click)="select(node)")

                ng-container(*ngIf="isShowHiddenFile(node)")
                    i.tree-icon.mr-2([ngClass]="node.extended ? 'fa-regular fa-folder-open' : 'fa-solid fa-folder'", (click)="node.editable = !node.editable; $event.stopPropagation(); service.render()")
                    .file-title(style="flex: auto; overflow: hidden;")
                        span(*ngIf="!node.editable") {{node.name}}
                        input.form-control.form-control-sm([(ngModel)]="node.rename", placeholder="{{node.type.split('.')[1]}} name", (keyup.enter)="move(node);", *ngIf="node.editable", (click)="$event.stopPropagation();")
                    
                    i.icon-action.fa-solid.fa-trash-can((click)="delete(node); $event.stopPropagation();")
                    i.icon-action.fa-solid.fa-arrow-up-from-bracket((click)="file(node); $event.stopPropagation();")
                    i.icon-action.fa-solid.fa-download((click)="download(node); $event.stopPropagation();")
                    i.icon-action.fa-solid.fa-folder-plus((click)="create(node, 'folder'); $event.stopPropagation();")

    .block-page(*ngIf="loading")
        svg(version='1.1', xmlns='http://www.w3.org/2000/svg', xlink='http://www.w3.org/1999/xlink', x='0px', y='0px', width='60px', height='40px', viewBox='0 0 60 40', style='enable-background:new 0 0 50 50;', space='preserve')
            rect(x='0', y='0', width='8', height='30', fill='#333')
                animateTransform(attributeType='xml', attributeName='transform', type='translate', values='0 0; 0 20; 0 0', begin='0', dur='0.6s', repeatCount='indefinite')
            rect(x='16', y='0', width='8', height='30', fill='#333')
                animateTransform(attributeType='xml', attributeName='transform', type='translate', values='0 0; 0 20; 0 0', begin='0.2s', dur='0.6s', repeatCount='indefinite')
            rect(x='32', y='0', width='8', height='30', fill='#333')
                animateTransform(attributeType='xml', attributeName='transform', type='translate', values='0 0; 0 20; 0 0', begin='0.4s', dur='0.6s', repeatCount='indefinite')

    wiz-portal-season-alert([model]="alert")